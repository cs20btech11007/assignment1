# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1d4vZSthyF9ROxx4_SnPyTDK7cYk0i7m5
"""

import math
import random
from scipy.stats import binom
import array as arr
import numpy as np

#Program to compare the simulated and theoretical result for finding the probability  distribution of number of tails are obtained when a coin is tossed 2 times
        
#Theoretical

#probability of getting a tail in single toss of a coin
p=1/4

#THE coin is tossed 2 times in a single trial/simulation
tosses=2

#contains the possible no. of tails in a single trial/simulation(2 throws)
tosses_vals=np.arange(0,2)

#array containing binomial distribution for each possible value( no. of tails) in a single trial/simulation
binom_vals=[binom.pmf(r,tosses,p) for r in trow_vals]
theo_res=binom_vals[0]+binom_vals[1]+binom_vals[2]
print("Theoretical Result: ",theo_res)

#Simulations
  
trial_size = 100000
count = 0
for i in range(trial_size):
  tail_count = 0
  for j in range(2):
    temp = random.randint(1,2)  
    if(temp == 2):
      tail_count += 1           
  if(tail_count <= 2):
    count += 1           
sim_res=count/trial_size
print("Simulated result: ",sim_res)

dif=abs(theo_res-sim_res)
print("Difference between theoretical and simulated result: ",dif)